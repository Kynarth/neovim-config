" Automatically change lowercase tapped cobol keywords with uppercase
if exists("b:did_cbl_iabbr")
  finish
endif
let b:did_cbl_iabbr = 1

inoreabbr <silent> <buffer> accept <C-R>=CblIab_ReplaceConditionally('accept', 'ACCEPT')<CR>
inoreabbr <silent> <buffer> access <C-R>=CblIab_ReplaceConditionally('access', 'ACCESS')<CR>
inoreabbr <silent> <buffer> activeclass <C-R>=CblIab_ReplaceConditionally('active-class', 'ACTIVE-CLASS')<CR>
inoreabbr <silent> <buffer> add <C-R>=CblIab_ReplaceConditionally('add', 'ADD')<CR>
inoreabbr <silent> <buffer> address <C-R>=CblIab_ReplaceConditionally('address', 'ADDRESS')<CR>
inoreabbr <silent> <buffer> advancing <C-R>=CblIab_ReplaceConditionally('advancing', 'ADVANCING')<CR>
inoreabbr <silent> <buffer> after <C-R>=CblIab_ReplaceConditionally('after', 'AFTER')<CR>
inoreabbr <silent> <buffer> aligned <C-R>=CblIab_ReplaceConditionally('aligned', 'ALIGNED')<CR>
inoreabbr <silent> <buffer> all <C-R>=CblIab_ReplaceConditionally('all', 'ALL')<CR>
inoreabbr <silent> <buffer> allocate <C-R>=CblIab_ReplaceConditionally('allocate', 'ALLOCATE')<CR>
inoreabbr <silent> <buffer> alphabet <C-R>=CblIab_ReplaceConditionally('alphabet', 'ALPHABET')<CR>
inoreabbr <silent> <buffer> alphabetic <C-R>=CblIab_ReplaceConditionally('alphabetic', 'ALPHABETIC')<CR>
inoreabbr <silent> <buffer> alphabeticlower <C-R>=CblIab_ReplaceConditionally('alphabetic-lower', 'ALPHABETIC-LOWER')<CR>
inoreabbr <silent> <buffer> alphabeticupper <C-R>=CblIab_ReplaceConditionally('alphabetic-upper', 'ALPHABETIC-UPPER')<CR>
inoreabbr <silent> <buffer> alphanumeric <C-R>=CblIab_ReplaceConditionally('alphanumeric', 'ALPHANUMERIC')<CR>
inoreabbr <silent> <buffer> alphanumericedited <C-R>=CblIab_ReplaceConditionally('alphanumeric-edited', 'ALPHANUMERIC-EDITED')<CR>
inoreabbr <silent> <buffer> also <C-R>=CblIab_ReplaceConditionally('also', 'ALSO')<CR>
inoreabbr <silent> <buffer> alter <C-R>=CblIab_ReplaceConditionally('alter', 'ALTER')<CR>
inoreabbr <silent> <buffer> alternate <C-R>=CblIab_ReplaceConditionally('alternate', 'ALTERNATE')<CR>
inoreabbr <silent> <buffer> and <C-R>=CblIab_ReplaceConditionally('and', 'AND')<CR>
inoreabbr <silent> <buffer> any <C-R>=CblIab_ReplaceConditionally('any', 'ANY')<CR>
inoreabbr <silent> <buffer> anycase <C-R>=CblIab_ReplaceConditionally('anycase', 'ANYCASE')<CR>
inoreabbr <silent> <buffer> are <C-R>=CblIab_ReplaceConditionally('are', 'ARE')<CR>
inoreabbr <silent> <buffer> area <C-R>=CblIab_ReplaceConditionally('area', 'AREA')<CR>
inoreabbr <silent> <buffer> areas <C-R>=CblIab_ReplaceConditionally('areas', 'AREAS')<CR>
inoreabbr <silent> <buffer> argumentnumber <C-R>=CblIab_ReplaceConditionally('argument-number', 'ARGUMENT-NUMBER')<CR>
inoreabbr <silent> <buffer> argumentvalue <C-R>=CblIab_ReplaceConditionally('argument-value', 'ARGUMENT-VALUE')<CR>
inoreabbr <silent> <buffer> arithmetic <C-R>=CblIab_ReplaceConditionally('arithmetic', 'ARITHMETIC')<CR>
inoreabbr <silent> <buffer> as <C-R>=CblIab_ReplaceConditionally('as', 'AS')<CR>
inoreabbr <silent> <buffer> ascending <C-R>=CblIab_ReplaceConditionally('ascending', 'ASCENDING')<CR>
inoreabbr <silent> <buffer> ascii <C-R>=CblIab_ReplaceConditionally('ascii', 'ASCII')<CR>
inoreabbr <silent> <buffer> assign <C-R>=CblIab_ReplaceConditionally('assign', 'ASSIGN')<CR>
inoreabbr <silent> <buffer> at <C-R>=CblIab_ReplaceConditionally('at', 'AT')<CR>
inoreabbr <silent> <buffer> attribute <C-R>=CblIab_ReplaceConditionally('attribute', 'ATTRIBUTE')<CR>
inoreabbr <silent> <buffer> auto <C-R>=CblIab_ReplaceConditionally('auto', 'AUTO')<CR>
inoreabbr <silent> <buffer> autoskip <C-R>=CblIab_ReplaceConditionally('auto-skip', 'AUTO-SKIP')<CR>
inoreabbr <silent> <buffer> automatic <C-R>=CblIab_ReplaceConditionally('automatic', 'AUTOMATIC')<CR>
inoreabbr <silent> <buffer> autoterminate <C-R>=CblIab_ReplaceConditionally('autoterminate', 'AUTOTERMINATE')<CR>
inoreabbr <silent> <buffer> awayfromzero <C-R>=CblIab_ReplaceConditionally('away-from-zero', 'AWAY-FROM-ZERO')<CR>
inoreabbr <silent> <buffer> band <C-R>=CblIab_ReplaceConditionally('b-and', 'B-AND')<CR>
inoreabbr <silent> <buffer> bnot <C-R>=CblIab_ReplaceConditionally('b-not', 'B-NOT')<CR>
inoreabbr <silent> <buffer> bor <C-R>=CblIab_ReplaceConditionally('b-or', 'B-OR')<CR>
inoreabbr <silent> <buffer> bxor <C-R>=CblIab_ReplaceConditionally('b-xor', 'B-XOR')<CR>
inoreabbr <silent> <buffer> backgroundcolor <C-R>=CblIab_ReplaceConditionally('background-color', 'BACKGROUND-COLOR')<CR>
inoreabbr <silent> <buffer> backgroundcolour <C-R>=CblIab_ReplaceConditionally('background-colour', 'BACKGROUND-COLOUR')<CR>
inoreabbr <silent> <buffer> based <C-R>=CblIab_ReplaceConditionally('based', 'BASED')<CR>
inoreabbr <silent> <buffer> beep <C-R>=CblIab_ReplaceConditionally('beep', 'BEEP')<CR>
inoreabbr <silent> <buffer> before <C-R>=CblIab_ReplaceConditionally('before', 'BEFORE')<CR>
inoreabbr <silent> <buffer> bell <C-R>=CblIab_ReplaceConditionally('bell', 'BELL')<CR>
inoreabbr <silent> <buffer> binary <C-R>=CblIab_ReplaceConditionally('binary', 'BINARY')<CR>
inoreabbr <silent> <buffer> binaryclong <C-R>=CblIab_ReplaceConditionally('binary-c-long', 'BINARY-C-LONG')<CR>
inoreabbr <silent> <buffer> binarychar <C-R>=CblIab_ReplaceConditionally('binary-char', 'BINARY-CHAR')<CR>
inoreabbr <silent> <buffer> binarydouble <C-R>=CblIab_ReplaceConditionally('binary-double', 'BINARY-DOUBLE')<CR>
inoreabbr <silent> <buffer> binaryint <C-R>=CblIab_ReplaceConditionally('binary-int', 'BINARY-INT')<CR>
inoreabbr <silent> <buffer> binarylong <C-R>=CblIab_ReplaceConditionally('binary-long', 'BINARY-LONG')<CR>
inoreabbr <silent> <buffer> binarylonglong <C-R>=CblIab_ReplaceConditionally('binary-long-long', 'BINARY-LONG-LONG')<CR>
inoreabbr <silent> <buffer> binaryshort <C-R>=CblIab_ReplaceConditionally('binary-short', 'BINARY-SHORT')<CR>
inoreabbr <silent> <buffer> bit <C-R>=CblIab_ReplaceConditionally('bit', 'BIT')<CR>
inoreabbr <silent> <buffer> blank <C-R>=CblIab_ReplaceConditionally('blank', 'BLANK')<CR>
inoreabbr <silent> <buffer> blink <C-R>=CblIab_ReplaceConditionally('blink', 'BLINK')<CR>
inoreabbr <silent> <buffer> block <C-R>=CblIab_ReplaceConditionally('block', 'BLOCK')<CR>
inoreabbr <silent> <buffer> boolean <C-R>=CblIab_ReplaceConditionally('boolean', 'BOOLEAN')<CR>
inoreabbr <silent> <buffer> bottom <C-R>=CblIab_ReplaceConditionally('bottom', 'BOTTOM')<CR>
inoreabbr <silent> <buffer> by <C-R>=CblIab_ReplaceConditionally('by', 'BY')<CR>
inoreabbr <silent> <buffer> bytelength <C-R>=CblIab_ReplaceConditionally('byte-length', 'BYTE-LENGTH')<CR>
inoreabbr <silent> <buffer> call <C-R>=CblIab_ReplaceConditionally('call', 'CALL')<CR>
inoreabbr <silent> <buffer> cancel <C-R>=CblIab_ReplaceConditionally('cancel', 'CANCEL')<CR>
inoreabbr <silent> <buffer> capacity <C-R>=CblIab_ReplaceConditionally('capacity', 'CAPACITY')<CR>
inoreabbr <silent> <buffer> cd <C-R>=CblIab_ReplaceConditionally('cd', 'CD')<CR>
inoreabbr <silent> <buffer> center <C-R>=CblIab_ReplaceConditionally('center', 'CENTER')<CR>
inoreabbr <silent> <buffer> cf <C-R>=CblIab_ReplaceConditionally('cf', 'CF')<CR>
inoreabbr <silent> <buffer> ch <C-R>=CblIab_ReplaceConditionally('ch', 'CH')<CR>
inoreabbr <silent> <buffer> chain <C-R>=CblIab_ReplaceConditionally('chain', 'CHAIN')<CR>
inoreabbr <silent> <buffer> chaining <C-R>=CblIab_ReplaceConditionally('chaining', 'CHAINING')<CR>
inoreabbr <silent> <buffer> character <C-R>=CblIab_ReplaceConditionally('character', 'CHARACTER')<CR>
inoreabbr <silent> <buffer> characters <C-R>=CblIab_ReplaceConditionally('characters', 'CHARACTERS')<CR>
inoreabbr <silent> <buffer> class <C-R>=CblIab_ReplaceConditionally('class', 'CLASS')<CR>
inoreabbr <silent> <buffer> classid <C-R>=CblIab_ReplaceConditionally('class-id', 'CLASS-ID')<CR>
inoreabbr <silent> <buffer> classification <C-R>=CblIab_ReplaceConditionally('classification', 'CLASSIFICATION')<CR>
inoreabbr <silent> <buffer> close <C-R>=CblIab_ReplaceConditionally('close', 'CLOSE')<CR>
inoreabbr <silent> <buffer> code <C-R>=CblIab_ReplaceConditionally('code', 'CODE')<CR>
inoreabbr <silent> <buffer> codeset <C-R>=CblIab_ReplaceConditionally('code-set', 'CODE-SET')<CR>
inoreabbr <silent> <buffer> col <C-R>=CblIab_ReplaceConditionally('col', 'COL')<CR>
inoreabbr <silent> <buffer> collating <C-R>=CblIab_ReplaceConditionally('collating', 'COLLATING')<CR>
inoreabbr <silent> <buffer> cols <C-R>=CblIab_ReplaceConditionally('cols', 'COLS')<CR>
inoreabbr <silent> <buffer> column <C-R>=CblIab_ReplaceConditionally('column', 'COLUMN')<CR>
inoreabbr <silent> <buffer> columns <C-R>=CblIab_ReplaceConditionally('columns', 'COLUMNS')<CR>
inoreabbr <silent> <buffer> comma <C-R>=CblIab_ReplaceConditionally('comma', 'COMMA')<CR>
inoreabbr <silent> <buffer> commandline <C-R>=CblIab_ReplaceConditionally('command-line', 'COMMAND-LINE')<CR>
inoreabbr <silent> <buffer> commit <C-R>=CblIab_ReplaceConditionally('commit', 'COMMIT')<CR>
inoreabbr <silent> <buffer> common <C-R>=CblIab_ReplaceConditionally('common', 'COMMON')<CR>
inoreabbr <silent> <buffer> communication <C-R>=CblIab_ReplaceConditionally('communication', 'COMMUNICATION')<CR>
inoreabbr <silent> <buffer> comp <C-R>=CblIab_ReplaceConditionally('comp', 'COMP')<CR>
inoreabbr <silent> <buffer> comp1 <C-R>=CblIab_ReplaceConditionally('comp-1', 'COMP-1')<CR>
inoreabbr <silent> <buffer> comp2 <C-R>=CblIab_ReplaceConditionally('comp-2', 'COMP-2')<CR>
inoreabbr <silent> <buffer> comp3 <C-R>=CblIab_ReplaceConditionally('comp-3', 'COMP-3')<CR>
inoreabbr <silent> <buffer> comp4 <C-R>=CblIab_ReplaceConditionally('comp-4', 'COMP-4')<CR>
inoreabbr <silent> <buffer> comp5 <C-R>=CblIab_ReplaceConditionally('comp-5', 'COMP-5')<CR>
inoreabbr <silent> <buffer> comp6 <C-R>=CblIab_ReplaceConditionally('comp-6', 'COMP-6')<CR>
inoreabbr <silent> <buffer> compx <C-R>=CblIab_ReplaceConditionally('comp-x', 'COMP-X')<CR>
inoreabbr <silent> <buffer> computational <C-R>=CblIab_ReplaceConditionally('computational', 'COMPUTATIONAL')<CR>
inoreabbr <silent> <buffer> computational1 <C-R>=CblIab_ReplaceConditionally('computational-1', 'COMPUTATIONAL-1')<CR>
inoreabbr <silent> <buffer> computational2 <C-R>=CblIab_ReplaceConditionally('computational-2', 'COMPUTATIONAL-2')<CR>
inoreabbr <silent> <buffer> computational3 <C-R>=CblIab_ReplaceConditionally('computational-3', 'COMPUTATIONAL-3')<CR>
inoreabbr <silent> <buffer> computational4 <C-R>=CblIab_ReplaceConditionally('computational-4', 'COMPUTATIONAL-4')<CR>
inoreabbr <silent> <buffer> computational5 <C-R>=CblIab_ReplaceConditionally('computational-5', 'COMPUTATIONAL-5')<CR>
inoreabbr <silent> <buffer> computationalx <C-R>=CblIab_ReplaceConditionally('computational-x', 'COMPUTATIONAL-X')<CR>
inoreabbr <silent> <buffer> compute <C-R>=CblIab_ReplaceConditionally('compute', 'COMPUTE')<CR>
inoreabbr <silent> <buffer> condition <C-R>=CblIab_ReplaceConditionally('condition', 'CONDITION')<CR>
inoreabbr <silent> <buffer> configuration <C-R>=CblIab_ReplaceConditionally('configuration', 'CONFIGURATION')<CR>
inoreabbr <silent> <buffer> constant <C-R>=CblIab_ReplaceConditionally('constant', 'CONSTANT')<CR>
inoreabbr <silent> <buffer> contains <C-R>=CblIab_ReplaceConditionally('contains', 'CONTAINS')<CR>
inoreabbr <silent> <buffer> content <C-R>=CblIab_ReplaceConditionally('content', 'CONTENT')<CR>
inoreabbr <silent> <buffer> continue <C-R>=CblIab_ReplaceConditionally('continue', 'CONTINUE')<CR>
inoreabbr <silent> <buffer> control <C-R>=CblIab_ReplaceConditionally('control', 'CONTROL')<CR>
inoreabbr <silent> <buffer> controls <C-R>=CblIab_ReplaceConditionally('controls', 'CONTROLS')<CR>
inoreabbr <silent> <buffer> conversion <C-R>=CblIab_ReplaceConditionally('conversion', 'CONVERSION')<CR>
inoreabbr <silent> <buffer> converting <C-R>=CblIab_ReplaceConditionally('converting', 'CONVERTING')<CR>
inoreabbr <silent> <buffer> copy <C-R>=CblIab_ReplaceConditionally('copy', 'COPY')<CR>
inoreabbr <silent> <buffer> corr <C-R>=CblIab_ReplaceConditionally('corr', 'CORR')<CR>
inoreabbr <silent> <buffer> corresponding <C-R>=CblIab_ReplaceConditionally('corresponding', 'CORRESPONDING')<CR>
inoreabbr <silent> <buffer> count <C-R>=CblIab_ReplaceConditionally('count', 'COUNT')<CR>
inoreabbr <silent> <buffer> crt <C-R>=CblIab_ReplaceConditionally('crt', 'CRT')<CR>
inoreabbr <silent> <buffer> crtunder <C-R>=CblIab_ReplaceConditionally('crt-under', 'CRT-UNDER')<CR>
inoreabbr <silent> <buffer> currency <C-R>=CblIab_ReplaceConditionally('currency', 'CURRENCY')<CR>
inoreabbr <silent> <buffer> cursor <C-R>=CblIab_ReplaceConditionally('cursor', 'CURSOR')<CR>
inoreabbr <silent> <buffer> cycle <C-R>=CblIab_ReplaceConditionally('cycle', 'CYCLE')<CR>
inoreabbr <silent> <buffer> data <C-R>=CblIab_ReplaceConditionally('data', 'DATA')<CR>
inoreabbr <silent> <buffer> datapointer <C-R>=CblIab_ReplaceConditionally('data-pointer', 'DATA-POINTER')<CR>
inoreabbr <silent> <buffer> date <C-R>=CblIab_ReplaceConditionally('date', 'DATE')<CR>
inoreabbr <silent> <buffer> day <C-R>=CblIab_ReplaceConditionally('day', 'DAY')<CR>
inoreabbr <silent> <buffer> dayofweek <C-R>=CblIab_ReplaceConditionally('day-of-week', 'DAY-OF-WEEK')<CR>
inoreabbr <silent> <buffer> de <C-R>=CblIab_ReplaceConditionally('de', 'DE')<CR>
inoreabbr <silent> <buffer> debugging <C-R>=CblIab_ReplaceConditionally('debugging', 'DEBUGGING')<CR>
inoreabbr <silent> <buffer> decimalpoint <C-R>=CblIab_ReplaceConditionally('decimal-point', 'DECIMAL-POINT')<CR>
inoreabbr <silent> <buffer> declaratives <C-R>=CblIab_ReplaceConditionally('declaratives', 'DECLARATIVES')<CR>
inoreabbr <silent> <buffer> default <C-R>=CblIab_ReplaceConditionally('default', 'DEFAULT')<CR>
inoreabbr <silent> <buffer> delete <C-R>=CblIab_ReplaceConditionally('delete', 'DELETE')<CR>
inoreabbr <silent> <buffer> delimited <C-R>=CblIab_ReplaceConditionally('delimited', 'DELIMITED')<CR>
inoreabbr <silent> <buffer> delimiter <C-R>=CblIab_ReplaceConditionally('delimiter', 'DELIMITER')<CR>
inoreabbr <silent> <buffer> depending <C-R>=CblIab_ReplaceConditionally('depending', 'DEPENDING')<CR>
inoreabbr <silent> <buffer> descending <C-R>=CblIab_ReplaceConditionally('descending', 'DESCENDING')<CR>
inoreabbr <silent> <buffer> destination <C-R>=CblIab_ReplaceConditionally('destination', 'DESTINATION')<CR>
inoreabbr <silent> <buffer> detail <C-R>=CblIab_ReplaceConditionally('detail', 'DETAIL')<CR>
inoreabbr <silent> <buffer> disable <C-R>=CblIab_ReplaceConditionally('disable', 'DISABLE')<CR>
inoreabbr <silent> <buffer> disc <C-R>=CblIab_ReplaceConditionally('disc', 'DISC')<CR>
inoreabbr <silent> <buffer> disk <C-R>=CblIab_ReplaceConditionally('disk', 'DISK')<CR>
inoreabbr <silent> <buffer> display <C-R>=CblIab_ReplaceConditionally('display', 'DISPLAY')<CR>
inoreabbr <silent> <buffer> divide <C-R>=CblIab_ReplaceConditionally('divide', 'DIVIDE')<CR>
inoreabbr <silent> <buffer> division <C-R>=CblIab_ReplaceConditionally('division', 'DIVISION')<CR>
inoreabbr <silent> <buffer> down <C-R>=CblIab_ReplaceConditionally('down', 'DOWN')<CR>
inoreabbr <silent> <buffer> duplicates <C-R>=CblIab_ReplaceConditionally('duplicates', 'DUPLICATES')<CR>
inoreabbr <silent> <buffer> dynamic <C-R>=CblIab_ReplaceConditionally('dynamic', 'DYNAMIC')<CR>
inoreabbr <silent> <buffer> ebcdic <C-R>=CblIab_ReplaceConditionally('ebcdic', 'EBCDIC')<CR>
inoreabbr <silent> <buffer> ec <C-R>=CblIab_ReplaceConditionally('ec', 'EC')<CR>
inoreabbr <silent> <buffer> egi <C-R>=CblIab_ReplaceConditionally('egi', 'EGI')<CR>
inoreabbr <silent> <buffer> else <C-R>=CblIab_ReplaceConditionally('else', 'ELSE')<CR>
inoreabbr <silent> <buffer> emi <C-R>=CblIab_ReplaceConditionally('emi', 'EMI')<CR>
inoreabbr <silent> <buffer> emptycheck <C-R>=CblIab_ReplaceConditionally('empty-check', 'EMPTY-CHECK')<CR>
inoreabbr <silent> <buffer> enable <C-R>=CblIab_ReplaceConditionally('enable', 'ENABLE')<CR>
inoreabbr <silent> <buffer> end <C-R>=CblIab_ReplaceConditionally('end', 'END')<CR>
inoreabbr <silent> <buffer> endaccept <C-R>=CblIab_ReplaceConditionally('end-accept', 'END-ACCEPT')<CR>
inoreabbr <silent> <buffer> endadd <C-R>=CblIab_ReplaceConditionally('end-add', 'END-ADD')<CR>
inoreabbr <silent> <buffer> endcall <C-R>=CblIab_ReplaceConditionally('end-call', 'END-CALL')<CR>
inoreabbr <silent> <buffer> endchain <C-R>=CblIab_ReplaceConditionally('end-chain', 'END-CHAIN')<CR>
inoreabbr <silent> <buffer> endcompute <C-R>=CblIab_ReplaceConditionally('end-compute', 'END-COMPUTE')<CR>
inoreabbr <silent> <buffer> enddelete <C-R>=CblIab_ReplaceConditionally('end-delete', 'END-DELETE')<CR>
inoreabbr <silent> <buffer> enddisplay <C-R>=CblIab_ReplaceConditionally('end-display', 'END-DISPLAY')<CR>
inoreabbr <silent> <buffer> enddivide <C-R>=CblIab_ReplaceConditionally('end-divide', 'END-DIVIDE')<CR>
inoreabbr <silent> <buffer> endevaluate <C-R>=CblIab_ReplaceConditionally('end-evaluate', 'END-EVALUATE')<CR>
inoreabbr <silent> <buffer> endif <C-R>=CblIab_ReplaceConditionally('end-if', 'END-IF')<CR>
inoreabbr <silent> <buffer> endmultiply <C-R>=CblIab_ReplaceConditionally('end-multiply', 'END-MULTIPLY')<CR>
inoreabbr <silent> <buffer> endofpage <C-R>=CblIab_ReplaceConditionally('end-of-page', 'END-OF-PAGE')<CR>
inoreabbr <silent> <buffer> endperform <C-R>=CblIab_ReplaceConditionally('end-perform', 'END-PERFORM')<CR>
inoreabbr <silent> <buffer> endread <C-R>=CblIab_ReplaceConditionally('end-read', 'END-READ')<CR>
inoreabbr <silent> <buffer> endreceive <C-R>=CblIab_ReplaceConditionally('end-receive', 'END-RECEIVE')<CR>
inoreabbr <silent> <buffer> endreturn <C-R>=CblIab_ReplaceConditionally('end-return', 'END-RETURN')<CR>
inoreabbr <silent> <buffer> endrewrite <C-R>=CblIab_ReplaceConditionally('end-rewrite', 'END-REWRITE')<CR>
inoreabbr <silent> <buffer> endsearch <C-R>=CblIab_ReplaceConditionally('end-search', 'END-SEARCH')<CR>
inoreabbr <silent> <buffer> endstart <C-R>=CblIab_ReplaceConditionally('end-start', 'END-START')<CR>
inoreabbr <silent> <buffer> endstring <C-R>=CblIab_ReplaceConditionally('end-string', 'END-STRING')<CR>
inoreabbr <silent> <buffer> endsubtract <C-R>=CblIab_ReplaceConditionally('end-subtract', 'END-SUBTRACT')<CR>
inoreabbr <silent> <buffer> endunstring <C-R>=CblIab_ReplaceConditionally('end-unstring', 'END-UNSTRING')<CR>
inoreabbr <silent> <buffer> endwrite <C-R>=CblIab_ReplaceConditionally('end-write', 'END-WRITE')<CR>
inoreabbr <silent> <buffer> entry <C-R>=CblIab_ReplaceConditionally('entry', 'ENTRY')<CR>
inoreabbr <silent> <buffer> entryconvention <C-R>=CblIab_ReplaceConditionally('entry-convention', 'ENTRY-CONVENTION')<CR>
inoreabbr <silent> <buffer> environment <C-R>=CblIab_ReplaceConditionally('environment', 'ENVIRONMENT')<CR>
inoreabbr <silent> <buffer> environmentname <C-R>=CblIab_ReplaceConditionally('environment-name', 'ENVIRONMENT-NAME')<CR>
inoreabbr <silent> <buffer> environmentvalue <C-R>=CblIab_ReplaceConditionally('environment-value', 'ENVIRONMENT-VALUE')<CR>
inoreabbr <silent> <buffer> eo <C-R>=CblIab_ReplaceConditionally('eo', 'EO')<CR>
inoreabbr <silent> <buffer> eol <C-R>=CblIab_ReplaceConditionally('eol', 'EOL')<CR>
inoreabbr <silent> <buffer> eop <C-R>=CblIab_ReplaceConditionally('eop', 'EOP')<CR>
inoreabbr <silent> <buffer> eos <C-R>=CblIab_ReplaceConditionally('eos', 'EOS')<CR>
inoreabbr <silent> <buffer> equal <C-R>=CblIab_ReplaceConditionally('equal', 'EQUAL')<CR>
inoreabbr <silent> <buffer> equals <C-R>=CblIab_ReplaceConditionally('equals', 'EQUALS')<CR>
inoreabbr <silent> <buffer> erase <C-R>=CblIab_ReplaceConditionally('erase', 'ERASE')<CR>
inoreabbr <silent> <buffer> error <C-R>=CblIab_ReplaceConditionally('error', 'ERROR')<CR>
inoreabbr <silent> <buffer> escape <C-R>=CblIab_ReplaceConditionally('escape', 'ESCAPE')<CR>
inoreabbr <silent> <buffer> esi <C-R>=CblIab_ReplaceConditionally('esi', 'ESI')<CR>
inoreabbr <silent> <buffer> evaluate <C-R>=CblIab_ReplaceConditionally('evaluate', 'EVALUATE')<CR>
inoreabbr <silent> <buffer> exception <C-R>=CblIab_ReplaceConditionally('exception', 'EXCEPTION')<CR>
inoreabbr <silent> <buffer> exceptionobject <C-R>=CblIab_ReplaceConditionally('exception-object', 'EXCEPTION-OBJECT')<CR>
inoreabbr <silent> <buffer> exclusive <C-R>=CblIab_ReplaceConditionally('exclusive', 'EXCLUSIVE')<CR>
inoreabbr <silent> <buffer> exit <C-R>=CblIab_ReplaceConditionally('exit', 'EXIT')<CR>
inoreabbr <silent> <buffer> expands <C-R>=CblIab_ReplaceConditionally('expands', 'EXPANDS')<CR>
inoreabbr <silent> <buffer> extend <C-R>=CblIab_ReplaceConditionally('extend', 'EXTEND')<CR>
inoreabbr <silent> <buffer> external <C-R>=CblIab_ReplaceConditionally('external', 'EXTERNAL')<CR>
inoreabbr <silent> <buffer> factory <C-R>=CblIab_ReplaceConditionally('factory', 'FACTORY')<CR>
inoreabbr <silent> <buffer> false <C-R>=CblIab_ReplaceConditionally('false', 'FALSE')<CR>
inoreabbr <silent> <buffer> fd <C-R>=CblIab_ReplaceConditionally('fd', 'FD')<CR>
inoreabbr <silent> <buffer> file <C-R>=CblIab_ReplaceConditionally('file', 'FILE')<CR>
inoreabbr <silent> <buffer> filecontrol <C-R>=CblIab_ReplaceConditionally('file-control', 'FILE-CONTROL')<CR>
inoreabbr <silent> <buffer> fileid <C-R>=CblIab_ReplaceConditionally('file-id', 'FILE-ID')<CR>
inoreabbr <silent> <buffer> filler <C-R>=CblIab_ReplaceConditionally('filler', 'FILLER')<CR>
inoreabbr <silent> <buffer> final <C-R>=CblIab_ReplaceConditionally('final', 'FINAL')<CR>
inoreabbr <silent> <buffer> first <C-R>=CblIab_ReplaceConditionally('first', 'FIRST')<CR>
inoreabbr <silent> <buffer> floatbinary128 <C-R>=CblIab_ReplaceConditionally('float-binary-128', 'FLOAT-BINARY-128')<CR>
inoreabbr <silent> <buffer> floatbinary32 <C-R>=CblIab_ReplaceConditionally('float-binary-32', 'FLOAT-BINARY-32')<CR>
inoreabbr <silent> <buffer> floatbinary64 <C-R>=CblIab_ReplaceConditionally('float-binary-64', 'FLOAT-BINARY-64')<CR>
inoreabbr <silent> <buffer> floatdecimal16 <C-R>=CblIab_ReplaceConditionally('float-decimal-16', 'FLOAT-DECIMAL-16')<CR>
inoreabbr <silent> <buffer> floatdecimal34 <C-R>=CblIab_ReplaceConditionally('float-decimal-34', 'FLOAT-DECIMAL-34')<CR>
inoreabbr <silent> <buffer> floatextended <C-R>=CblIab_ReplaceConditionally('float-extended', 'FLOAT-EXTENDED')<CR>
inoreabbr <silent> <buffer> floatinfinity <C-R>=CblIab_ReplaceConditionally('float-infinity', 'FLOAT-INFINITY')<CR>
inoreabbr <silent> <buffer> floatlong <C-R>=CblIab_ReplaceConditionally('float-long', 'FLOAT-LONG')<CR>
inoreabbr <silent> <buffer> floatnotanumber <C-R>=CblIab_ReplaceConditionally('float-not-a-number', 'FLOAT-NOT-A-NUMBER')<CR>
inoreabbr <silent> <buffer> floatshort <C-R>=CblIab_ReplaceConditionally('float-short', 'FLOAT-SHORT')<CR>
inoreabbr <silent> <buffer> footing <C-R>=CblIab_ReplaceConditionally('footing', 'FOOTING')<CR>
inoreabbr <silent> <buffer> for <C-R>=CblIab_ReplaceConditionally('for', 'FOR')<CR>
inoreabbr <silent> <buffer> foregroundcolor <C-R>=CblIab_ReplaceConditionally('foreground-color', 'FOREGROUND-COLOR')<CR>
inoreabbr <silent> <buffer> foregroundcolour <C-R>=CblIab_ReplaceConditionally('foreground-colour', 'FOREGROUND-COLOUR')<CR>
inoreabbr <silent> <buffer> forever <C-R>=CblIab_ReplaceConditionally('forever', 'FOREVER')<CR>
inoreabbr <silent> <buffer> format <C-R>=CblIab_ReplaceConditionally('format', 'FORMAT')<CR>
inoreabbr <silent> <buffer> free <C-R>=CblIab_ReplaceConditionally('free', 'FREE')<CR>
inoreabbr <silent> <buffer> from <C-R>=CblIab_ReplaceConditionally('from', 'FROM')<CR>
inoreabbr <silent> <buffer> full <C-R>=CblIab_ReplaceConditionally('full', 'FULL')<CR>
inoreabbr <silent> <buffer> function <C-R>=CblIab_ReplaceConditionally('function', 'FUNCTION')<CR>
inoreabbr <silent> <buffer> functionid <C-R>=CblIab_ReplaceConditionally('function-id', 'FUNCTION-ID')<CR>
inoreabbr <silent> <buffer> functionpointer <C-R>=CblIab_ReplaceConditionally('function-pointer', 'FUNCTION-POINTER')<CR>
inoreabbr <silent> <buffer> generate <C-R>=CblIab_ReplaceConditionally('generate', 'GENERATE')<CR>
inoreabbr <silent> <buffer> get <C-R>=CblIab_ReplaceConditionally('get', 'GET')<CR>
inoreabbr <silent> <buffer> giving <C-R>=CblIab_ReplaceConditionally('giving', 'GIVING')<CR>
inoreabbr <silent> <buffer> global <C-R>=CblIab_ReplaceConditionally('global', 'GLOBAL')<CR>
inoreabbr <silent> <buffer> go <C-R>=CblIab_ReplaceConditionally('go', 'GO')<CR>
inoreabbr <silent> <buffer> goback <C-R>=CblIab_ReplaceConditionally('goback', 'GOBACK')<CR>
inoreabbr <silent> <buffer> greater <C-R>=CblIab_ReplaceConditionally('greater', 'GREATER')<CR>
inoreabbr <silent> <buffer> group <C-R>=CblIab_ReplaceConditionally('group', 'GROUP')<CR>
inoreabbr <silent> <buffer> groupusage <C-R>=CblIab_ReplaceConditionally('group-usage', 'GROUP-USAGE')<CR>
inoreabbr <silent> <buffer> heading <C-R>=CblIab_ReplaceConditionally('heading', 'HEADING')<CR>
inoreabbr <silent> <buffer> highvalue <C-R>=CblIab_ReplaceConditionally('high-value', 'HIGH-VALUE')<CR>
inoreabbr <silent> <buffer> highvalues <C-R>=CblIab_ReplaceConditionally('high-values', 'HIGH-VALUES')<CR>
inoreabbr <silent> <buffer> highlight <C-R>=CblIab_ReplaceConditionally('highlight', 'HIGHLIGHT')<CR>
inoreabbr <silent> <buffer> io <C-R>=CblIab_ReplaceConditionally('i-o', 'I-O')<CR>
inoreabbr <silent> <buffer> iocontrol <C-R>=CblIab_ReplaceConditionally('i-o-control', 'I-O-CONTROL')<CR>
inoreabbr <silent> <buffer> id <C-R>=CblIab_ReplaceConditionally('id', 'ID')<CR>
inoreabbr <silent> <buffer> identification <C-R>=CblIab_ReplaceConditionally('identification', 'IDENTIFICATION')<CR>
inoreabbr <silent> <buffer> if <C-R>=CblIab_ReplaceConditionally('if', 'IF')<CR>
inoreabbr <silent> <buffer> ignore <C-R>=CblIab_ReplaceConditionally('ignore', 'IGNORE')<CR>
inoreabbr <silent> <buffer> ignoring <C-R>=CblIab_ReplaceConditionally('ignoring', 'IGNORING')<CR>
inoreabbr <silent> <buffer> implements <C-R>=CblIab_ReplaceConditionally('implements', 'IMPLEMENTS')<CR>
inoreabbr <silent> <buffer> in <C-R>=CblIab_ReplaceConditionally('in', 'IN')<CR>
inoreabbr <silent> <buffer> index <C-R>=CblIab_ReplaceConditionally('index', 'INDEX')<CR>
inoreabbr <silent> <buffer> indexed <C-R>=CblIab_ReplaceConditionally('indexed', 'INDEXED')<CR>
inoreabbr <silent> <buffer> indicate <C-R>=CblIab_ReplaceConditionally('indicate', 'INDICATE')<CR>
inoreabbr <silent> <buffer> indirect <C-R>=CblIab_ReplaceConditionally('indirect', 'INDIRECT')<CR>
inoreabbr <silent> <buffer> inherits <C-R>=CblIab_ReplaceConditionally('inherits', 'INHERITS')<CR>
inoreabbr <silent> <buffer> initial <C-R>=CblIab_ReplaceConditionally('initial', 'INITIAL')<CR>
inoreabbr <silent> <buffer> initialise <C-R>=CblIab_ReplaceConditionally('initialise', 'INITIALISE')<CR>
inoreabbr <silent> <buffer> initialised <C-R>=CblIab_ReplaceConditionally('initialised', 'INITIALISED')<CR>
inoreabbr <silent> <buffer> initialize <C-R>=CblIab_ReplaceConditionally('initialize', 'INITIALIZE')<CR>
inoreabbr <silent> <buffer> initialized <C-R>=CblIab_ReplaceConditionally('initialized', 'INITIALIZED')<CR>
inoreabbr <silent> <buffer> initiate <C-R>=CblIab_ReplaceConditionally('initiate', 'INITIATE')<CR>
inoreabbr <silent> <buffer> input <C-R>=CblIab_ReplaceConditionally('input', 'INPUT')<CR>
inoreabbr <silent> <buffer> inputoutput <C-R>=CblIab_ReplaceConditionally('input-output', 'INPUT-OUTPUT')<CR>
inoreabbr <silent> <buffer> inspect <C-R>=CblIab_ReplaceConditionally('inspect', 'INSPECT')<CR>
inoreabbr <silent> <buffer> interface <C-R>=CblIab_ReplaceConditionally('interface', 'INTERFACE')<CR>
inoreabbr <silent> <buffer> interfaceid <C-R>=CblIab_ReplaceConditionally('interface-id', 'INTERFACE-ID')<CR>
inoreabbr <silent> <buffer> intermediate <C-R>=CblIab_ReplaceConditionally('intermediate', 'INTERMEDIATE')<CR>
inoreabbr <silent> <buffer> into <C-R>=CblIab_ReplaceConditionally('into', 'INTO')<CR>
inoreabbr <silent> <buffer> intrinsic <C-R>=CblIab_ReplaceConditionally('intrinsic', 'INTRINSIC')<CR>
inoreabbr <silent> <buffer> invalid <C-R>=CblIab_ReplaceConditionally('invalid', 'INVALID')<CR>
inoreabbr <silent> <buffer> invoke <C-R>=CblIab_ReplaceConditionally('invoke', 'INVOKE')<CR>
inoreabbr <silent> <buffer> is <C-R>=CblIab_ReplaceConditionally('is', 'IS')<CR>
inoreabbr <silent> <buffer> just <C-R>=CblIab_ReplaceConditionally('just', 'JUST')<CR>
inoreabbr <silent> <buffer> justified <C-R>=CblIab_ReplaceConditionally('justified', 'JUSTIFIED')<CR>
inoreabbr <silent> <buffer> kept <C-R>=CblIab_ReplaceConditionally('kept', 'KEPT')<CR>
inoreabbr <silent> <buffer> key <C-R>=CblIab_ReplaceConditionally('key', 'KEY')<CR>
inoreabbr <silent> <buffer> keyboard <C-R>=CblIab_ReplaceConditionally('keyboard', 'KEYBOARD')<CR>
inoreabbr <silent> <buffer> label <C-R>=CblIab_ReplaceConditionally('label', 'LABEL')<CR>
inoreabbr <silent> <buffer> last <C-R>=CblIab_ReplaceConditionally('last', 'LAST')<CR>
inoreabbr <silent> <buffer> lc_all <C-R>=CblIab_ReplaceConditionally('lc_all', 'LC_ALL')<CR>
inoreabbr <silent> <buffer> lc_collate <C-R>=CblIab_ReplaceConditionally('lc_collate', 'LC_COLLATE')<CR>
inoreabbr <silent> <buffer> lc_ctype <C-R>=CblIab_ReplaceConditionally('lc_ctype', 'LC_CTYPE')<CR>
inoreabbr <silent> <buffer> lc_messages <C-R>=CblIab_ReplaceConditionally('lc_messages', 'LC_MESSAGES')<CR>
inoreabbr <silent> <buffer> lc_monetary <C-R>=CblIab_ReplaceConditionally('lc_monetary', 'LC_MONETARY')<CR>
inoreabbr <silent> <buffer> lc_numeric <C-R>=CblIab_ReplaceConditionally('lc_numeric', 'LC_NUMERIC')<CR>
inoreabbr <silent> <buffer> lc_time <C-R>=CblIab_ReplaceConditionally('lc_time', 'LC_TIME')<CR>
inoreabbr <silent> <buffer> leading <C-R>=CblIab_ReplaceConditionally('leading', 'LEADING')<CR>
inoreabbr <silent> <buffer> left <C-R>=CblIab_ReplaceConditionally('left', 'LEFT')<CR>
inoreabbr <silent> <buffer> leftjustify <C-R>=CblIab_ReplaceConditionally('left-justify', 'LEFT-JUSTIFY')<CR>
inoreabbr <silent> <buffer> leftline <C-R>=CblIab_ReplaceConditionally('leftline', 'LEFTLINE')<CR>
inoreabbr <silent> <buffer> length <C-R>=CblIab_ReplaceConditionally('length', 'LENGTH')<CR>
inoreabbr <silent> <buffer> lengthcheck <C-R>=CblIab_ReplaceConditionally('length-check', 'LENGTH-CHECK')<CR>
inoreabbr <silent> <buffer> less <C-R>=CblIab_ReplaceConditionally('less', 'LESS')<CR>
inoreabbr <silent> <buffer> limit <C-R>=CblIab_ReplaceConditionally('limit', 'LIMIT')<CR>
inoreabbr <silent> <buffer> limits <C-R>=CblIab_ReplaceConditionally('limits', 'LIMITS')<CR>
inoreabbr <silent> <buffer> linage <C-R>=CblIab_ReplaceConditionally('linage', 'LINAGE')<CR>
inoreabbr <silent> <buffer> linagecounter <C-R>=CblIab_ReplaceConditionally('linage-counter', 'LINAGE-COUNTER')<CR>
inoreabbr <silent> <buffer> line <C-R>=CblIab_ReplaceConditionally('line', 'LINE')<CR>
inoreabbr <silent> <buffer> linecounter <C-R>=CblIab_ReplaceConditionally('line-counter', 'LINE-COUNTER')<CR>
inoreabbr <silent> <buffer> lines <C-R>=CblIab_ReplaceConditionally('lines', 'LINES')<CR>
inoreabbr <silent> <buffer> linkage <C-R>=CblIab_ReplaceConditionally('linkage', 'LINKAGE')<CR>
inoreabbr <silent> <buffer> localstorage <C-R>=CblIab_ReplaceConditionally('local-storage', 'LOCAL-STORAGE')<CR>
inoreabbr <silent> <buffer> locale <C-R>=CblIab_ReplaceConditionally('locale', 'LOCALE')<CR>
inoreabbr <silent> <buffer> lock <C-R>=CblIab_ReplaceConditionally('lock', 'LOCK')<CR>
inoreabbr <silent> <buffer> lowvalue <C-R>=CblIab_ReplaceConditionally('low-value', 'LOW-VALUE')<CR>
inoreabbr <silent> <buffer> lowvalues <C-R>=CblIab_ReplaceConditionally('low-values', 'LOW-VALUES')<CR>
inoreabbr <silent> <buffer> lower <C-R>=CblIab_ReplaceConditionally('lower', 'LOWER')<CR>
inoreabbr <silent> <buffer> lowlight <C-R>=CblIab_ReplaceConditionally('lowlight', 'LOWLIGHT')<CR>
inoreabbr <silent> <buffer> manual <C-R>=CblIab_ReplaceConditionally('manual', 'MANUAL')<CR>
inoreabbr <silent> <buffer> memory <C-R>=CblIab_ReplaceConditionally('memory', 'MEMORY')<CR>
inoreabbr <silent> <buffer> merge <C-R>=CblIab_ReplaceConditionally('merge', 'MERGE')<CR>
inoreabbr <silent> <buffer> message <C-R>=CblIab_ReplaceConditionally('message', 'MESSAGE')<CR>
inoreabbr <silent> <buffer> method <C-R>=CblIab_ReplaceConditionally('method', 'METHOD')<CR>
inoreabbr <silent> <buffer> methodid <C-R>=CblIab_ReplaceConditionally('method-id', 'METHOD-ID')<CR>
inoreabbr <silent> <buffer> minus <C-R>=CblIab_ReplaceConditionally('minus', 'MINUS')<CR>
inoreabbr <silent> <buffer> mode <C-R>=CblIab_ReplaceConditionally('mode', 'MODE')<CR>
inoreabbr <silent> <buffer> move <C-R>=CblIab_ReplaceConditionally('move', 'MOVE')<CR>
inoreabbr <silent> <buffer> multiple <C-R>=CblIab_ReplaceConditionally('multiple', 'MULTIPLE')<CR>
inoreabbr <silent> <buffer> multiply <C-R>=CblIab_ReplaceConditionally('multiply', 'MULTIPLY')<CR>
inoreabbr <silent> <buffer> name <C-R>=CblIab_ReplaceConditionally('name', 'NAME')<CR>
inoreabbr <silent> <buffer> national <C-R>=CblIab_ReplaceConditionally('national', 'NATIONAL')<CR>
inoreabbr <silent> <buffer> nationaledited <C-R>=CblIab_ReplaceConditionally('national-edited', 'NATIONAL-EDITED')<CR>
inoreabbr <silent> <buffer> native <C-R>=CblIab_ReplaceConditionally('native', 'NATIVE')<CR>
inoreabbr <silent> <buffer> nearestawayfromzero <C-R>=CblIab_ReplaceConditionally('nearest-away-from-zero', 'NEAREST-AWAY-FROM-ZERO')<CR>
inoreabbr <silent> <buffer> nearesteven <C-R>=CblIab_ReplaceConditionally('nearest-even', 'NEAREST-EVEN')<CR>
inoreabbr <silent> <buffer> nearesttowardzero <C-R>=CblIab_ReplaceConditionally('nearest-toward-zero', 'NEAREST-TOWARD-ZERO')<CR>
inoreabbr <silent> <buffer> negative <C-R>=CblIab_ReplaceConditionally('negative', 'NEGATIVE')<CR>
inoreabbr <silent> <buffer> nested <C-R>=CblIab_ReplaceConditionally('nested', 'NESTED')<CR>
inoreabbr <silent> <buffer> next <C-R>=CblIab_ReplaceConditionally('next', 'NEXT')<CR>
inoreabbr <silent> <buffer> no <C-R>=CblIab_ReplaceConditionally('no', 'NO')<CR>
inoreabbr <silent> <buffer> noecho <C-R>=CblIab_ReplaceConditionally('no-echo', 'NO-ECHO')<CR>
inoreabbr <silent> <buffer> none <C-R>=CblIab_ReplaceConditionally('none', 'NONE')<CR>
inoreabbr <silent> <buffer> normal <C-R>=CblIab_ReplaceConditionally('normal', 'NORMAL')<CR>
inoreabbr <silent> <buffer> not <C-R>=CblIab_ReplaceConditionally('not', 'NOT')<CR>
inoreabbr <silent> <buffer> null <C-R>=CblIab_ReplaceConditionally('null', 'NULL')<CR>
inoreabbr <silent> <buffer> nulls <C-R>=CblIab_ReplaceConditionally('nulls', 'NULLS')<CR>
inoreabbr <silent> <buffer> number <C-R>=CblIab_ReplaceConditionally('number', 'NUMBER')<CR>
inoreabbr <silent> <buffer> numbers <C-R>=CblIab_ReplaceConditionally('numbers', 'NUMBERS')<CR>
inoreabbr <silent> <buffer> numeric <C-R>=CblIab_ReplaceConditionally('numeric', 'NUMERIC')<CR>
inoreabbr <silent> <buffer> numericedited <C-R>=CblIab_ReplaceConditionally('numeric-edited', 'NUMERIC-EDITED')<CR>
inoreabbr <silent> <buffer> object <C-R>=CblIab_ReplaceConditionally('object', 'OBJECT')<CR>
inoreabbr <silent> <buffer> objectcomputer <C-R>=CblIab_ReplaceConditionally('object-computer', 'OBJECT-COMPUTER')<CR>
inoreabbr <silent> <buffer> objectreference <C-R>=CblIab_ReplaceConditionally('object-reference', 'OBJECT-REFERENCE')<CR>
inoreabbr <silent> <buffer> occurs <C-R>=CblIab_ReplaceConditionally('occurs', 'OCCURS')<CR>
inoreabbr <silent> <buffer> of <C-R>=CblIab_ReplaceConditionally('of', 'OF')<CR>
inoreabbr <silent> <buffer> off <C-R>=CblIab_ReplaceConditionally('off', 'OFF')<CR>
inoreabbr <silent> <buffer> omitted <C-R>=CblIab_ReplaceConditionally('omitted', 'OMITTED')<CR>
inoreabbr <silent> <buffer> on <C-R>=CblIab_ReplaceConditionally('on', 'ON')<CR>
inoreabbr <silent> <buffer> only <C-R>=CblIab_ReplaceConditionally('only', 'ONLY')<CR>
inoreabbr <silent> <buffer> open <C-R>=CblIab_ReplaceConditionally('open', 'OPEN')<CR>
inoreabbr <silent> <buffer> optional <C-R>=CblIab_ReplaceConditionally('optional', 'OPTIONAL')<CR>
inoreabbr <silent> <buffer> options <C-R>=CblIab_ReplaceConditionally('options', 'OPTIONS')<CR>
inoreabbr <silent> <buffer> or <C-R>=CblIab_ReplaceConditionally('or', 'OR')<CR>
inoreabbr <silent> <buffer> order <C-R>=CblIab_ReplaceConditionally('order', 'ORDER')<CR>
inoreabbr <silent> <buffer> organisation <C-R>=CblIab_ReplaceConditionally('organisation', 'ORGANISATION')<CR>
inoreabbr <silent> <buffer> organization <C-R>=CblIab_ReplaceConditionally('organization', 'ORGANIZATION')<CR>
inoreabbr <silent> <buffer> other <C-R>=CblIab_ReplaceConditionally('other', 'OTHER')<CR>
inoreabbr <silent> <buffer> output <C-R>=CblIab_ReplaceConditionally('output', 'OUTPUT')<CR>
inoreabbr <silent> <buffer> overflow <C-R>=CblIab_ReplaceConditionally('overflow', 'OVERFLOW')<CR>
inoreabbr <silent> <buffer> overline <C-R>=CblIab_ReplaceConditionally('overline', 'OVERLINE')<CR>
inoreabbr <silent> <buffer> override <C-R>=CblIab_ReplaceConditionally('override', 'OVERRIDE')<CR>
inoreabbr <silent> <buffer> packeddecimal <C-R>=CblIab_ReplaceConditionally('packed-decimal', 'PACKED-DECIMAL')<CR>
inoreabbr <silent> <buffer> padding <C-R>=CblIab_ReplaceConditionally('padding', 'PADDING')<CR>
inoreabbr <silent> <buffer> page <C-R>=CblIab_ReplaceConditionally('page', 'PAGE')<CR>
inoreabbr <silent> <buffer> pagecounter <C-R>=CblIab_ReplaceConditionally('page-counter', 'PAGE-COUNTER')<CR>
inoreabbr <silent> <buffer> paragraph <C-R>=CblIab_ReplaceConditionally('paragraph', 'PARAGRAPH')<CR>
inoreabbr <silent> <buffer> perform <C-R>=CblIab_ReplaceConditionally('perform', 'PERFORM')<CR>
inoreabbr <silent> <buffer> pf <C-R>=CblIab_ReplaceConditionally('pf', 'PF')<CR>
inoreabbr <silent> <buffer> ph <C-R>=CblIab_ReplaceConditionally('ph', 'PH')<CR>
inoreabbr <silent> <buffer> pic <C-R>=CblIab_ReplaceConditionally('pic', 'PIC')<CR>
inoreabbr <silent> <buffer> picture <C-R>=CblIab_ReplaceConditionally('picture', 'PICTURE')<CR>
inoreabbr <silent> <buffer> plus <C-R>=CblIab_ReplaceConditionally('plus', 'PLUS')<CR>
inoreabbr <silent> <buffer> pointer <C-R>=CblIab_ReplaceConditionally('pointer', 'POINTER')<CR>
inoreabbr <silent> <buffer> position <C-R>=CblIab_ReplaceConditionally('position', 'POSITION')<CR>
inoreabbr <silent> <buffer> positive <C-R>=CblIab_ReplaceConditionally('positive', 'POSITIVE')<CR>
inoreabbr <silent> <buffer> prefixed <C-R>=CblIab_ReplaceConditionally('prefixed', 'PREFIXED')<CR>
inoreabbr <silent> <buffer> present <C-R>=CblIab_ReplaceConditionally('present', 'PRESENT')<CR>
inoreabbr <silent> <buffer> previous <C-R>=CblIab_ReplaceConditionally('previous', 'PREVIOUS')<CR>
inoreabbr <silent> <buffer> printer <C-R>=CblIab_ReplaceConditionally('printer', 'PRINTER')<CR>
inoreabbr <silent> <buffer> printing <C-R>=CblIab_ReplaceConditionally('printing', 'PRINTING')<CR>
inoreabbr <silent> <buffer> procedure <C-R>=CblIab_ReplaceConditionally('procedure', 'PROCEDURE')<CR>
inoreabbr <silent> <buffer> procedurepointer <C-R>=CblIab_ReplaceConditionally('procedure-pointer', 'PROCEDURE-POINTER')<CR>
inoreabbr <silent> <buffer> procedures <C-R>=CblIab_ReplaceConditionally('procedures', 'PROCEDURES')<CR>
inoreabbr <silent> <buffer> proceed <C-R>=CblIab_ReplaceConditionally('proceed', 'PROCEED')<CR>
inoreabbr <silent> <buffer> program <C-R>=CblIab_ReplaceConditionally('program', 'PROGRAM')<CR>
inoreabbr <silent> <buffer> programid <C-R>=CblIab_ReplaceConditionally('program-id', 'PROGRAM-ID')<CR>
inoreabbr <silent> <buffer> programpointer <C-R>=CblIab_ReplaceConditionally('program-pointer', 'PROGRAM-POINTER')<CR>
inoreabbr <silent> <buffer> prohibited <C-R>=CblIab_ReplaceConditionally('prohibited', 'PROHIBITED')<CR>
inoreabbr <silent> <buffer> prompt <C-R>=CblIab_ReplaceConditionally('prompt', 'PROMPT')<CR>
inoreabbr <silent> <buffer> property <C-R>=CblIab_ReplaceConditionally('property', 'PROPERTY')<CR>
inoreabbr <silent> <buffer> prototype <C-R>=CblIab_ReplaceConditionally('prototype', 'PROTOTYPE')<CR>
inoreabbr <silent> <buffer> purge <C-R>=CblIab_ReplaceConditionally('purge', 'PURGE')<CR>
inoreabbr <silent> <buffer> queue <C-R>=CblIab_ReplaceConditionally('queue', 'QUEUE')<CR>
inoreabbr <silent> <buffer> quote <C-R>=CblIab_ReplaceConditionally('quote', 'QUOTE')<CR>
inoreabbr <silent> <buffer> quotes <C-R>=CblIab_ReplaceConditionally('quotes', 'QUOTES')<CR>
inoreabbr <silent> <buffer> raise <C-R>=CblIab_ReplaceConditionally('raise', 'RAISE')<CR>
inoreabbr <silent> <buffer> raising <C-R>=CblIab_ReplaceConditionally('raising', 'RAISING')<CR>
inoreabbr <silent> <buffer> random <C-R>=CblIab_ReplaceConditionally('random', 'RANDOM')<CR>
inoreabbr <silent> <buffer> rd <C-R>=CblIab_ReplaceConditionally('rd', 'RD')<CR>
inoreabbr <silent> <buffer> read <C-R>=CblIab_ReplaceConditionally('read', 'READ')<CR>
inoreabbr <silent> <buffer> receive <C-R>=CblIab_ReplaceConditionally('receive', 'RECEIVE')<CR>
inoreabbr <silent> <buffer> record <C-R>=CblIab_ReplaceConditionally('record', 'RECORD')<CR>
inoreabbr <silent> <buffer> recording <C-R>=CblIab_ReplaceConditionally('recording', 'RECORDING')<CR>
inoreabbr <silent> <buffer> records <C-R>=CblIab_ReplaceConditionally('records', 'RECORDS')<CR>
inoreabbr <silent> <buffer> recursive <C-R>=CblIab_ReplaceConditionally('recursive', 'RECURSIVE')<CR>
inoreabbr <silent> <buffer> redefines <C-R>=CblIab_ReplaceConditionally('redefines', 'REDEFINES')<CR>
inoreabbr <silent> <buffer> reel <C-R>=CblIab_ReplaceConditionally('reel', 'REEL')<CR>
inoreabbr <silent> <buffer> reference <C-R>=CblIab_ReplaceConditionally('reference', 'REFERENCE')<CR>
inoreabbr <silent> <buffer> references <C-R>=CblIab_ReplaceConditionally('references', 'REFERENCES')<CR>
inoreabbr <silent> <buffer> relation <C-R>=CblIab_ReplaceConditionally('relation', 'RELATION')<CR>
inoreabbr <silent> <buffer> relative <C-R>=CblIab_ReplaceConditionally('relative', 'RELATIVE')<CR>
inoreabbr <silent> <buffer> release <C-R>=CblIab_ReplaceConditionally('release', 'RELEASE')<CR>
inoreabbr <silent> <buffer> remainder <C-R>=CblIab_ReplaceConditionally('remainder', 'REMAINDER')<CR>
inoreabbr <silent> <buffer> removal <C-R>=CblIab_ReplaceConditionally('removal', 'REMOVAL')<CR>
inoreabbr <silent> <buffer> renames <C-R>=CblIab_ReplaceConditionally('renames', 'RENAMES')<CR>
inoreabbr <silent> <buffer> replace <C-R>=CblIab_ReplaceConditionally('replace', 'REPLACE')<CR>
inoreabbr <silent> <buffer> replacing <C-R>=CblIab_ReplaceConditionally('replacing', 'REPLACING')<CR>
inoreabbr <silent> <buffer> report <C-R>=CblIab_ReplaceConditionally('report', 'REPORT')<CR>
inoreabbr <silent> <buffer> reporting <C-R>=CblIab_ReplaceConditionally('reporting', 'REPORTING')<CR>
inoreabbr <silent> <buffer> reports <C-R>=CblIab_ReplaceConditionally('reports', 'REPORTS')<CR>
inoreabbr <silent> <buffer> repository <C-R>=CblIab_ReplaceConditionally('repository', 'REPOSITORY')<CR>
inoreabbr <silent> <buffer> required <C-R>=CblIab_ReplaceConditionally('required', 'REQUIRED')<CR>
inoreabbr <silent> <buffer> reserve <C-R>=CblIab_ReplaceConditionally('reserve', 'RESERVE')<CR>
inoreabbr <silent> <buffer> reset <C-R>=CblIab_ReplaceConditionally('reset', 'RESET')<CR>
inoreabbr <silent> <buffer> resume <C-R>=CblIab_ReplaceConditionally('resume', 'RESUME')<CR>
inoreabbr <silent> <buffer> retry <C-R>=CblIab_ReplaceConditionally('retry', 'RETRY')<CR>
inoreabbr <silent> <buffer> return <C-R>=CblIab_ReplaceConditionally('return', 'RETURN')<CR>
inoreabbr <silent> <buffer> returning <C-R>=CblIab_ReplaceConditionally('returning', 'RETURNING')<CR>
inoreabbr <silent> <buffer> reversevideo <C-R>=CblIab_ReplaceConditionally('reverse-video', 'REVERSE-VIDEO')<CR>
inoreabbr <silent> <buffer> reversed <C-R>=CblIab_ReplaceConditionally('reversed', 'REVERSED')<CR>
inoreabbr <silent> <buffer> rewind <C-R>=CblIab_ReplaceConditionally('rewind', 'REWIND')<CR>
inoreabbr <silent> <buffer> rewrite <C-R>=CblIab_ReplaceConditionally('rewrite', 'REWRITE')<CR>
inoreabbr <silent> <buffer> rf <C-R>=CblIab_ReplaceConditionally('rf', 'RF')<CR>
inoreabbr <silent> <buffer> rh <C-R>=CblIab_ReplaceConditionally('rh', 'RH')<CR>
inoreabbr <silent> <buffer> right <C-R>=CblIab_ReplaceConditionally('right', 'RIGHT')<CR>
inoreabbr <silent> <buffer> rightjustify <C-R>=CblIab_ReplaceConditionally('right-justify', 'RIGHT-JUSTIFY')<CR>
inoreabbr <silent> <buffer> rollback <C-R>=CblIab_ReplaceConditionally('rollback', 'ROLLBACK')<CR>
inoreabbr <silent> <buffer> rounded <C-R>=CblIab_ReplaceConditionally('rounded', 'ROUNDED')<CR>
inoreabbr <silent> <buffer> rounding <C-R>=CblIab_ReplaceConditionally('rounding', 'ROUNDING')<CR>
inoreabbr <silent> <buffer> run <C-R>=CblIab_ReplaceConditionally('run', 'RUN')<CR>
inoreabbr <silent> <buffer> same <C-R>=CblIab_ReplaceConditionally('same', 'SAME')<CR>
inoreabbr <silent> <buffer> screen <C-R>=CblIab_ReplaceConditionally('screen', 'SCREEN')<CR>
inoreabbr <silent> <buffer> scroll <C-R>=CblIab_ReplaceConditionally('scroll', 'SCROLL')<CR>
inoreabbr <silent> <buffer> sd <C-R>=CblIab_ReplaceConditionally('sd', 'SD')<CR>
inoreabbr <silent> <buffer> search <C-R>=CblIab_ReplaceConditionally('search', 'SEARCH')<CR>
inoreabbr <silent> <buffer> seconds <C-R>=CblIab_ReplaceConditionally('seconds', 'SECONDS')<CR>
inoreabbr <silent> <buffer> section <C-R>=CblIab_ReplaceConditionally('section', 'SECTION')<CR>
inoreabbr <silent> <buffer> secure <C-R>=CblIab_ReplaceConditionally('secure', 'SECURE')<CR>
inoreabbr <silent> <buffer> segment <C-R>=CblIab_ReplaceConditionally('segment', 'SEGMENT')<CR>
inoreabbr <silent> <buffer> segmentlimit <C-R>=CblIab_ReplaceConditionally('segment-limit', 'SEGMENT-LIMIT')<CR>
inoreabbr <silent> <buffer> select <C-R>=CblIab_ReplaceConditionally('select', 'SELECT')<CR>
inoreabbr <silent> <buffer> self <C-R>=CblIab_ReplaceConditionally('self', 'SELF')<CR>
inoreabbr <silent> <buffer> send <C-R>=CblIab_ReplaceConditionally('send', 'SEND')<CR>
inoreabbr <silent> <buffer> sentence <C-R>=CblIab_ReplaceConditionally('sentence', 'SENTENCE')<CR>
inoreabbr <silent> <buffer> separate <C-R>=CblIab_ReplaceConditionally('separate', 'SEPARATE')<CR>
inoreabbr <silent> <buffer> sequence <C-R>=CblIab_ReplaceConditionally('sequence', 'SEQUENCE')<CR>
inoreabbr <silent> <buffer> sequential <C-R>=CblIab_ReplaceConditionally('sequential', 'SEQUENTIAL')<CR>
inoreabbr <silent> <buffer> set <C-R>=CblIab_ReplaceConditionally('set', 'SET')<CR>
inoreabbr <silent> <buffer> sharing <C-R>=CblIab_ReplaceConditionally('sharing', 'SHARING')<CR>
inoreabbr <silent> <buffer> sign <C-R>=CblIab_ReplaceConditionally('sign', 'SIGN')<CR>
inoreabbr <silent> <buffer> signed <C-R>=CblIab_ReplaceConditionally('signed', 'SIGNED')<CR>
inoreabbr <silent> <buffer> signedint <C-R>=CblIab_ReplaceConditionally('signed-int', 'SIGNED-INT')<CR>
inoreabbr <silent> <buffer> signedlong <C-R>=CblIab_ReplaceConditionally('signed-long', 'SIGNED-LONG')<CR>
inoreabbr <silent> <buffer> signedshort <C-R>=CblIab_ReplaceConditionally('signed-short', 'SIGNED-SHORT')<CR>
inoreabbr <silent> <buffer> size <C-R>=CblIab_ReplaceConditionally('size', 'SIZE')<CR>
inoreabbr <silent> <buffer> sort <C-R>=CblIab_ReplaceConditionally('sort', 'SORT')<CR>
inoreabbr <silent> <buffer> sortmerge <C-R>=CblIab_ReplaceConditionally('sort-merge', 'SORT-MERGE')<CR>
inoreabbr <silent> <buffer> source <C-R>=CblIab_ReplaceConditionally('source', 'SOURCE')<CR>
inoreabbr <silent> <buffer> sourcecomputer <C-R>=CblIab_ReplaceConditionally('source-computer', 'SOURCE-COMPUTER')<CR>
inoreabbr <silent> <buffer> sources <C-R>=CblIab_ReplaceConditionally('sources', 'SOURCES')<CR>
inoreabbr <silent> <buffer> space <C-R>=CblIab_ReplaceConditionally('space', 'SPACE')<CR>
inoreabbr <silent> <buffer> spacefill <C-R>=CblIab_ReplaceConditionally('space-fill', 'SPACE-FILL')<CR>
inoreabbr <silent> <buffer> spaces <C-R>=CblIab_ReplaceConditionally('spaces', 'SPACES')<CR>
inoreabbr <silent> <buffer> specialnames <C-R>=CblIab_ReplaceConditionally('special-names', 'SPECIAL-NAMES')<CR>
inoreabbr <silent> <buffer> standard <C-R>=CblIab_ReplaceConditionally('standard', 'STANDARD')<CR>
inoreabbr <silent> <buffer> standard1 <C-R>=CblIab_ReplaceConditionally('standard-1', 'STANDARD-1')<CR>
inoreabbr <silent> <buffer> standard2 <C-R>=CblIab_ReplaceConditionally('standard-2', 'STANDARD-2')<CR>
inoreabbr <silent> <buffer> standardbinary <C-R>=CblIab_ReplaceConditionally('standard-binary', 'STANDARD-BINARY')<CR>
inoreabbr <silent> <buffer> standarddecimal <C-R>=CblIab_ReplaceConditionally('standard-decimal', 'STANDARD-DECIMAL')<CR>
inoreabbr <silent> <buffer> start <C-R>=CblIab_ReplaceConditionally('start', 'START')<CR>
inoreabbr <silent> <buffer> statement <C-R>=CblIab_ReplaceConditionally('statement', 'STATEMENT')<CR>
inoreabbr <silent> <buffer> static <C-R>=CblIab_ReplaceConditionally('static', 'STATIC')<CR>
inoreabbr <silent> <buffer> status <C-R>=CblIab_ReplaceConditionally('status', 'STATUS')<CR>
inoreabbr <silent> <buffer> stdcall <C-R>=CblIab_ReplaceConditionally('stdcall', 'STDCALL')<CR>
inoreabbr <silent> <buffer> step <C-R>=CblIab_ReplaceConditionally('step', 'STEP')<CR>
inoreabbr <silent> <buffer> stop <C-R>=CblIab_ReplaceConditionally('stop', 'STOP')<CR>
inoreabbr <silent> <buffer> string <C-R>=CblIab_ReplaceConditionally('string', 'STRING')<CR>
inoreabbr <silent> <buffer> strong <C-R>=CblIab_ReplaceConditionally('strong', 'STRONG')<CR>
inoreabbr <silent> <buffer> subqueue1 <C-R>=CblIab_ReplaceConditionally('sub-queue-1', 'SUB-QUEUE-1')<CR>
inoreabbr <silent> <buffer> subqueue2 <C-R>=CblIab_ReplaceConditionally('sub-queue-2', 'SUB-QUEUE-2')<CR>
inoreabbr <silent> <buffer> subqueue3 <C-R>=CblIab_ReplaceConditionally('sub-queue-3', 'SUB-QUEUE-3')<CR>
inoreabbr <silent> <buffer> subtract <C-R>=CblIab_ReplaceConditionally('subtract', 'SUBTRACT')<CR>
inoreabbr <silent> <buffer> sum <C-R>=CblIab_ReplaceConditionally('sum', 'SUM')<CR>
inoreabbr <silent> <buffer> super <C-R>=CblIab_ReplaceConditionally('super', 'SUPER')<CR>
inoreabbr <silent> <buffer> suppress <C-R>=CblIab_ReplaceConditionally('suppress', 'SUPPRESS')<CR>
inoreabbr <silent> <buffer> symbol <C-R>=CblIab_ReplaceConditionally('symbol', 'SYMBOL')<CR>
inoreabbr <silent> <buffer> symbolic <C-R>=CblIab_ReplaceConditionally('symbolic', 'SYMBOLIC')<CR>
inoreabbr <silent> <buffer> sync <C-R>=CblIab_ReplaceConditionally('sync', 'SYNC')<CR>
inoreabbr <silent> <buffer> synchronised <C-R>=CblIab_ReplaceConditionally('synchronised', 'SYNCHRONISED')<CR>
inoreabbr <silent> <buffer> synchronized <C-R>=CblIab_ReplaceConditionally('synchronized', 'SYNCHRONIZED')<CR>
inoreabbr <silent> <buffer> systemdefault <C-R>=CblIab_ReplaceConditionally('system-default', 'SYSTEM-DEFAULT')<CR>
inoreabbr <silent> <buffer> tab <C-R>=CblIab_ReplaceConditionally('tab', 'TAB')<CR>
inoreabbr <silent> <buffer> table <C-R>=CblIab_ReplaceConditionally('table', 'TABLE')<CR>
inoreabbr <silent> <buffer> tallying <C-R>=CblIab_ReplaceConditionally('tallying', 'TALLYING')<CR>
inoreabbr <silent> <buffer> tape <C-R>=CblIab_ReplaceConditionally('tape', 'TAPE')<CR>
inoreabbr <silent> <buffer> terminal <C-R>=CblIab_ReplaceConditionally('terminal', 'TERMINAL')<CR>
inoreabbr <silent> <buffer> terminate <C-R>=CblIab_ReplaceConditionally('terminate', 'TERMINATE')<CR>
inoreabbr <silent> <buffer> test <C-R>=CblIab_ReplaceConditionally('test', 'TEST')<CR>
inoreabbr <silent> <buffer> text <C-R>=CblIab_ReplaceConditionally('text', 'TEXT')<CR>
inoreabbr <silent> <buffer> than <C-R>=CblIab_ReplaceConditionally('than', 'THAN')<CR>
inoreabbr <silent> <buffer> then <C-R>=CblIab_ReplaceConditionally('then', 'THEN')<CR>
inoreabbr <silent> <buffer> through <C-R>=CblIab_ReplaceConditionally('through', 'THROUGH')<CR>
inoreabbr <silent> <buffer> thru <C-R>=CblIab_ReplaceConditionally('thru', 'THRU')<CR>
inoreabbr <silent> <buffer> time <C-R>=CblIab_ReplaceConditionally('time', 'TIME')<CR>
inoreabbr <silent> <buffer> timeout <C-R>=CblIab_ReplaceConditionally('time-out', 'TIME-OUT')<CR>
inoreabbr <silent> <buffer> timeout <C-R>=CblIab_ReplaceConditionally('timeout', 'TIMEOUT')<CR>
inoreabbr <silent> <buffer> times <C-R>=CblIab_ReplaceConditionally('times', 'TIMES')<CR>
inoreabbr <silent> <buffer> to <C-R>=CblIab_ReplaceConditionally('to', 'TO')<CR>
inoreabbr <silent> <buffer> top <C-R>=CblIab_ReplaceConditionally('top', 'TOP')<CR>
inoreabbr <silent> <buffer> towardgreater <C-R>=CblIab_ReplaceConditionally('toward-greater', 'TOWARD-GREATER')<CR>
inoreabbr <silent> <buffer> towardlesser <C-R>=CblIab_ReplaceConditionally('toward-lesser', 'TOWARD-LESSER')<CR>
inoreabbr <silent> <buffer> trailing <C-R>=CblIab_ReplaceConditionally('trailing', 'TRAILING')<CR>
inoreabbr <silent> <buffer> trailingsign <C-R>=CblIab_ReplaceConditionally('trailing-sign', 'TRAILING-SIGN')<CR>
inoreabbr <silent> <buffer> transform <C-R>=CblIab_ReplaceConditionally('transform', 'TRANSFORM')<CR>
inoreabbr <silent> <buffer> true <C-R>=CblIab_ReplaceConditionally('true', 'TRUE')<CR>
inoreabbr <silent> <buffer> truncation <C-R>=CblIab_ReplaceConditionally('truncation', 'TRUNCATION')<CR>
inoreabbr <silent> <buffer> type <C-R>=CblIab_ReplaceConditionally('type', 'TYPE')<CR>
inoreabbr <silent> <buffer> typedef <C-R>=CblIab_ReplaceConditionally('typedef', 'TYPEDEF')<CR>
inoreabbr <silent> <buffer> ucs4 <C-R>=CblIab_ReplaceConditionally('ucs-4', 'UCS-4')<CR>
inoreabbr <silent> <buffer> underline <C-R>=CblIab_ReplaceConditionally('underline', 'UNDERLINE')<CR>
inoreabbr <silent> <buffer> unit <C-R>=CblIab_ReplaceConditionally('unit', 'UNIT')<CR>
inoreabbr <silent> <buffer> universal <C-R>=CblIab_ReplaceConditionally('universal', 'UNIVERSAL')<CR>
inoreabbr <silent> <buffer> unlock <C-R>=CblIab_ReplaceConditionally('unlock', 'UNLOCK')<CR>
inoreabbr <silent> <buffer> unsigned <C-R>=CblIab_ReplaceConditionally('unsigned', 'UNSIGNED')<CR>
inoreabbr <silent> <buffer> unsignedint <C-R>=CblIab_ReplaceConditionally('unsigned-int', 'UNSIGNED-INT')<CR>
inoreabbr <silent> <buffer> unsignedlong <C-R>=CblIab_ReplaceConditionally('unsigned-long', 'UNSIGNED-LONG')<CR>
inoreabbr <silent> <buffer> unsignedshort <C-R>=CblIab_ReplaceConditionally('unsigned-short', 'UNSIGNED-SHORT')<CR>
inoreabbr <silent> <buffer> unstring <C-R>=CblIab_ReplaceConditionally('unstring', 'UNSTRING')<CR>
inoreabbr <silent> <buffer> until <C-R>=CblIab_ReplaceConditionally('until', 'UNTIL')<CR>
inoreabbr <silent> <buffer> up <C-R>=CblIab_ReplaceConditionally('up', 'UP')<CR>
inoreabbr <silent> <buffer> update <C-R>=CblIab_ReplaceConditionally('update', 'UPDATE')<CR>
inoreabbr <silent> <buffer> upon <C-R>=CblIab_ReplaceConditionally('upon', 'UPON')<CR>
inoreabbr <silent> <buffer> upper <C-R>=CblIab_ReplaceConditionally('upper', 'UPPER')<CR>
inoreabbr <silent> <buffer> usage <C-R>=CblIab_ReplaceConditionally('usage', 'USAGE')<CR>
inoreabbr <silent> <buffer> use <C-R>=CblIab_ReplaceConditionally('use', 'USE')<CR>
inoreabbr <silent> <buffer> user <C-R>=CblIab_ReplaceConditionally('user', 'USER')<CR>
inoreabbr <silent> <buffer> userdefault <C-R>=CblIab_ReplaceConditionally('user-default', 'USER-DEFAULT')<CR>
inoreabbr <silent> <buffer> using <C-R>=CblIab_ReplaceConditionally('using', 'USING')<CR>
inoreabbr <silent> <buffer> utf16 <C-R>=CblIab_ReplaceConditionally('utf-16', 'UTF-16')<CR>
inoreabbr <silent> <buffer> utf8 <C-R>=CblIab_ReplaceConditionally('utf-8', 'UTF-8')<CR>
inoreabbr <silent> <buffer> valstatus <C-R>=CblIab_ReplaceConditionally('val-status', 'VAL-STATUS')<CR>
inoreabbr <silent> <buffer> valid <C-R>=CblIab_ReplaceConditionally('valid', 'VALID')<CR>
inoreabbr <silent> <buffer> validate <C-R>=CblIab_ReplaceConditionally('validate', 'VALIDATE')<CR>
inoreabbr <silent> <buffer> validatestatus <C-R>=CblIab_ReplaceConditionally('validate-status', 'VALIDATE-STATUS')<CR>
inoreabbr <silent> <buffer> value <C-R>=CblIab_ReplaceConditionally('value', 'VALUE')<CR>
inoreabbr <silent> <buffer> values <C-R>=CblIab_ReplaceConditionally('values', 'VALUES')<CR>
inoreabbr <silent> <buffer> varying <C-R>=CblIab_ReplaceConditionally('varying', 'VARYING')<CR>
inoreabbr <silent> <buffer> wait <C-R>=CblIab_ReplaceConditionally('wait', 'WAIT')<CR>
inoreabbr <silent> <buffer> when <C-R>=CblIab_ReplaceConditionally('when', 'WHEN')<CR>
inoreabbr <silent> <buffer> with <C-R>=CblIab_ReplaceConditionally('with', 'WITH')<CR>
inoreabbr <silent> <buffer> words <C-R>=CblIab_ReplaceConditionally('words', 'WORDS')<CR>
inoreabbr <silent> <buffer> workingstorage <C-R>=CblIab_ReplaceConditionally('working-storage', 'WORKING-STORAGE')<CR>
inoreabbr <silent> <buffer> write <C-R>=CblIab_ReplaceConditionally('write', 'WRITE')<CR>
inoreabbr <silent> <buffer> yyyyddd <C-R>=CblIab_ReplaceConditionally('yyyyddd', 'YYYYDDD')<CR>
inoreabbr <silent> <buffer> yyyymmdd <C-R>=CblIab_ReplaceConditionally('yyyymmdd', 'YYYYMMDD')<CR>
inoreabbr <silent> <buffer> zero <C-R>=CblIab_ReplaceConditionally('zero', 'ZERO')<CR>
inoreabbr <silent> <buffer> zerofill <C-R>=CblIab_ReplaceConditionally('zero-fill', 'ZERO-FILL')<CR>
inoreabbr <silent> <buffer> zeroes <C-R>=CblIab_ReplaceConditionally('zeroes', 'ZEROES')<CR>
inoreabbr <silent> <buffer> zeros <C-R>=CblIab_ReplaceConditionally('zeros', 'ZEROS')<CR>
inoreabbr <silent> <buffer> extra (obsolete) context sensitive words <C-R>=CblIab_ReplaceConditionally('extra (obsolete) context sensitive words', 'Extra (obsolete) context sensitive words')<CR>
inoreabbr <silent> <buffer> author <C-R>=CblIab_ReplaceConditionally('author', 'AUTHOR')<CR>
inoreabbr <silent> <buffer> datecompiled <C-R>=CblIab_ReplaceConditionally('date-compiled', 'DATE-COMPILED')<CR>
inoreabbr <silent> <buffer> datemodified <C-R>=CblIab_ReplaceConditionally('date-modified', 'DATE-MODIFIED')<CR>
inoreabbr <silent> <buffer> datewritten <C-R>=CblIab_ReplaceConditionally('date-written', 'DATE-WRITTEN')<CR>
inoreabbr <silent> <buffer> installation <C-R>=CblIab_ReplaceConditionally('installation', 'INSTALLATION')<CR>
inoreabbr <silent> <buffer> remarks <C-R>=CblIab_ReplaceConditionally('remarks', 'REMARKS')<CR>
inoreabbr <silent> <buffer> security <C-R>=CblIab_ReplaceConditionally('security', 'SECURITY')<CR>
inoreabbr <silent> <buffer>  <C-R>=CblIab_ReplaceConditionally('', '')<CR>
inoreabbr <silent> <buffer> extra internal registers <C-R>=CblIab_ReplaceConditionally('extra internal registers', 'Extra internal registers')<CR>
inoreabbr <silent> <buffer> returncode <C-R>=CblIab_ReplaceConditionally('return-code', 'RETURN-CODE')<CR>
inoreabbr <silent> <buffer> sortreturn <C-R>=CblIab_ReplaceConditionally('sort-return', 'SORT-RETURN')<CR>
inoreabbr <silent> <buffer> numberofcallparameters <C-R>=CblIab_ReplaceConditionally('number-of-call-parameters', 'NUMBER-OF-CALL-PARAMETERS')<CR>
inoreabbr <silent> <buffer> cobcrtstatus <C-R>=CblIab_ReplaceConditionally('cob-crt-status', 'COB-CRT-STATUS')<CR>

function! CblIab_ReplaceConditionally(original, replacement)
  " only replace outside of comments or strings (which map to constant)
  let elesyn = synIDtrans(synID(line("."), col(".") - 1, 0))
  if elesyn != hlID('Comment') && elesyn != hlID('Constant')
    let word = a:replacement
  else
    let word = a:original
  endif

  let g:UndoBuffer = a:original
  return word
endfunction

inoremap <buffer> <C-X>u <C-W><C-R>=g:UndoBuffer<CR><C-V><Space>
